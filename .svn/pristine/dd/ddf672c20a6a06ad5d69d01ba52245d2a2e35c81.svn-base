(function() {
  'use strict';

  /**
   * @ngdoc object
   * @name guide.controller:GuideCtrl
   *
   * @description
   *
   */
  angular
    .module('guide')
    .controller('GuideCtrl', GuideCtrl);

  function GuideCtrl($scope, $timeout,$rootScope, $mdDialog, consts, Guide) {

    $scope.currentTab = "activities";
    $scope.intrestingVideos = [];
    $scope.teenVideos = [];
    $scope.activities = [];
    $scope.activitiesCarousel = undefined;





    $scope.selectTab = function(tab) {

      $scope.currentTab = tab;

      if (tab == 'teenVideos') {
        $timeout(function() {
          //teenVideos
          $("#teenVideos").slick({
            infinite: false,
            slidesToShow: 3,
            slidesToScroll: 1,
            //  arrows: false,
            initialSlide: $scope.teenVideos.length > 3 ? $scope.teenVideos.length - 3 : 0,
            nextArrow: '<button type="button" class="slick-next"><i class="fa fa-chevron-right"></i></button>',
            prevArrow: '<button type="button" class="slick-prev"><i class="fa fa-chevron-left"></i></button>',
          });

        }, 10);
      } else if (tab == 'intrestingVideos') {
        $timeout(function() {
          //intrestingVideos
          $("#intrestingVideos").slick({
            infinite: false,
            slidesToShow: 3,
            slidesToScroll: 1,
            //  arrows: false,
            initialSlide: $scope.intrestingVideos.length > 3 ? $scope.intrestingVideos.length - 3 : 0,
            nextArrow: '<button type="button" class="slick-next"><i class="fa fa-chevron-right"></i></button>',
            prevArrow: '<button type="button" class="slick-prev"><i class="fa fa-chevron-left"></i></button>',
          });

        }, 10);
      }
      hideLoader();
    }

    $scope.getGuidesData = function() {
      Guide.getGuidesData().then(function(response) {
        console.log(response);
        $scope.intrestingVideos = response.data.intrestingVideos;
        $scope.teenVideos = response.data.teenVideos;
        $scope.activities = response.data.activities;

        $timeout(function() {
          $scope.activitiesCarousel = $("#activities").slick({
            infinite: false,
            slidesToShow: 3,
            slidesToScroll: 1,
            //  arrows: false,
            initialSlide: $scope.activities.length > 3 ? $scope.activities.length - 3 : 0,
            nextArrow: '<button type="button" class="slick-next"><i class="fa fa-chevron-right"></i></button>',
            prevArrow: '<button type="button" class="slick-prev"><i class="fa fa-chevron-left"></i></button>',
          });
        }, 100);

      });

    }


    $scope.downloadActivity = function() {
      var url = consts.serverUrl + 'Website/DownloadActivity';
      window.open(url, '_blank');
    }

    $scope.openImageModal = function(imageUrl, ev) {
      $scope.currentImage = imageUrl;
      $mdDialog.show({
        targetEvent: ev,
        templateUrl: 'dialogs/imageDialog.html',
        scope: $scope,
        preserveScope: true,
        clickOutsideToClose: true
      });
    }
    //Likes
    $scope.likeActivity = function(activity) {
      if ($rootScope.currentUser != undefined) {
        Guide.likeActivity(activity.Id).then(function(response) {
          if (response.data) {
            activity.NumOfLikes++;
          }

        });
      } else {
        $mdDialog.show({
          templateUrl: 'dialogs/loginDialog.html',
          scope: $scope,
          preserveScope: true,
          clickOutsideToClose: true
        });
      }
    }


    $scope.getGuidesData();
  }
}());
