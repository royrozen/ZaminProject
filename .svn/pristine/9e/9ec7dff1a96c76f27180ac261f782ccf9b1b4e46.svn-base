{"version":3,"names":[],"mappings":"","sources":["polymer/polymer-micro.html"],"sourcesContent":["<!--\n@license\nCopyright (c) 2014 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n-->\n\n\n\n<script>(function () {\nfunction resolve() {\ndocument.body.removeAttribute('unresolved');\n}\nif (window.WebComponents) {\naddEventListener('WebComponentsReady', resolve);\n} else {\nif (document.readyState === 'interactive' || document.readyState === 'complete') {\nresolve();\n} else {\naddEventListener('DOMContentLoaded', resolve);\n}\n}\n}());window.Polymer = {\nSettings: function () {\nvar settings = window.Polymer || {};\nif (!settings.noUrlSettings) {\nvar parts = location.search.slice(1).split('&');\nfor (var i = 0, o; i < parts.length && (o = parts[i]); i++) {\no = o.split('=');\no[0] && (settings[o[0]] = o[1] || true);\n}\n}\nsettings.wantShadow = settings.dom === 'shadow';\nsettings.hasShadow = Boolean(Element.prototype.createShadowRoot);\nsettings.nativeShadow = settings.hasShadow && !window.ShadowDOMPolyfill;\nsettings.useShadow = settings.wantShadow && settings.hasShadow;\nsettings.hasNativeImports = Boolean('import' in document.createElement('link'));\nsettings.useNativeImports = settings.hasNativeImports;\nsettings.useNativeCustomElements = !window.CustomElements || window.CustomElements.useNative;\nsettings.useNativeShadow = settings.useShadow && settings.nativeShadow;\nsettings.usePolyfillProto = !settings.useNativeCustomElements && !Object.__proto__;\nsettings.hasNativeCSSProperties = !navigator.userAgent.match('AppleWebKit/601') && window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)');\nsettings.useNativeCSSProperties = settings.hasNativeCSSProperties && settings.lazyRegister && settings.useNativeCSSProperties;\nreturn settings;\n}()\n};(function () {\nvar userPolymer = window.Polymer;\nwindow.Polymer = function (prototype) {\nif (typeof prototype === 'function') {\nprototype = prototype.prototype;\n}\nif (!prototype) {\nprototype = {};\n}\nvar factory = desugar(prototype);\nprototype = factory.prototype;\nvar options = { prototype: prototype };\nif (prototype.extends) {\noptions.extends = prototype.extends;\n}\nPolymer.telemetry._registrate(prototype);\ndocument.registerElement(prototype.is, options);\nreturn factory;\n};\nvar desugar = function (prototype) {\nvar base = Polymer.Base;\nif (prototype.extends) {\nbase = Polymer.Base._getExtendedPrototype(prototype.extends);\n}\nprototype = Polymer.Base.chainObject(prototype, base);\nprototype.registerCallback();\nreturn prototype.constructor;\n};\nif (userPolymer) {\nfor (var i in userPolymer) {\nPolymer[i] = userPolymer[i];\n}\n}\nPolymer.Class = desugar;\n}());\nPolymer.telemetry = {\nregistrations: [],\n_regLog: function (prototype) {\nconsole.log('[' + prototype.is + ']: registered');\n},\n_registrate: function (prototype) {\nthis.registrations.push(prototype);\nPolymer.log && this._regLog(prototype);\n},\ndumpRegistrations: function () {\nthis.registrations.forEach(this._regLog);\n}\n};Object.defineProperty(window, 'currentImport', {\nenumerable: true,\nconfigurable: true,\nget: function () {\nreturn (document._currentScript || document.currentScript).ownerDocument;\n}\n});Polymer.RenderStatus = {\n_ready: false,\n_callbacks: [],\nwhenReady: function (cb) {\nif (this._ready) {\ncb();\n} else {\nthis._callbacks.push(cb);\n}\n},\n_makeReady: function () {\nthis._ready = true;\nfor (var i = 0; i < this._callbacks.length; i++) {\nthis._callbacks[i]();\n}\nthis._callbacks = [];\n},\n_catchFirstRender: function () {\nrequestAnimationFrame(function () {\nPolymer.RenderStatus._makeReady();\n});\n},\n_afterNextRenderQueue: [],\n_waitingNextRender: false,\nafterNextRender: function (element, fn, args) {\nthis._watchNextRender();\nthis._afterNextRenderQueue.push([\nelement,\nfn,\nargs\n]);\n},\nhasRendered: function () {\nreturn this._ready;\n},\n_watchNextRender: function () {\nif (!this._waitingNextRender) {\nthis._waitingNextRender = true;\nvar fn = function () {\nPolymer.RenderStatus._flushNextRender();\n};\nif (!this._ready) {\nthis.whenReady(fn);\n} else {\nrequestAnimationFrame(fn);\n}\n}\n},\n_flushNextRender: function () {\nvar self = this;\nsetTimeout(function () {\nself._flushRenderCallbacks(self._afterNextRenderQueue);\nself._afterNextRenderQueue = [];\nself._waitingNextRender = false;\n});\n},\n_flushRenderCallbacks: function (callbacks) {\nfor (var i = 0, h; i < callbacks.length; i++) {\nh = callbacks[i];\nh[1].apply(h[0], h[2] || Polymer.nar);\n}\n}\n};\nif (window.HTMLImports) {\nHTMLImports.whenReady(function () {\nPolymer.RenderStatus._catchFirstRender();\n});\n} else {\nPolymer.RenderStatus._catchFirstRender();\n}\nPolymer.ImportStatus = Polymer.RenderStatus;\nPolymer.ImportStatus.whenLoaded = Polymer.ImportStatus.whenReady;(function () {\n'use strict';\nvar settings = Polymer.Settings;\nPolymer.Base = {\n__isPolymerInstance__: true,\n_addFeature: function (feature) {\nthis.extend(this, feature);\n},\nregisterCallback: function () {\nif (settings.lazyRegister === 'max') {\nif (this.beforeRegister) {\nthis.beforeRegister();\n}\n} else {\nthis._desugarBehaviors();\nthis._doBehavior('beforeRegister');\n}\nthis._registerFeatures();\nif (!settings.lazyRegister) {\nthis.ensureRegisterFinished();\n}\n},\ncreatedCallback: function () {\nif (!this.__hasRegisterFinished) {\nthis._ensureRegisterFinished(this.__proto__);\n}\nPolymer.telemetry.instanceCount++;\nthis.root = this;\nthis._doBehavior('created');\nthis._initFeatures();\n},\nensureRegisterFinished: function () {\nthis._ensureRegisterFinished(this);\n},\n_ensureRegisterFinished: function (proto) {\nif (proto.__hasRegisterFinished !== proto.is || !proto.is) {\nif (settings.lazyRegister === 'max') {\nproto._desugarBehaviors();\nproto._doBehaviorOnly('beforeRegister');\n}\nproto.__hasRegisterFinished = proto.is;\nif (proto._finishRegisterFeatures) {\nproto._finishRegisterFeatures();\n}\nproto._doBehavior('registered');\nif (settings.usePolyfillProto && proto !== this) {\nproto.extend(this, proto);\n}\n}\n},\nattachedCallback: function () {\nvar self = this;\nPolymer.RenderStatus.whenReady(function () {\nself.isAttached = true;\nself._doBehavior('attached');\n});\n},\ndetachedCallback: function () {\nvar self = this;\nPolymer.RenderStatus.whenReady(function () {\nself.isAttached = false;\nself._doBehavior('detached');\n});\n},\nattributeChangedCallback: function (name, oldValue, newValue) {\nthis._attributeChangedImpl(name);\nthis._doBehavior('attributeChanged', [\nname,\noldValue,\nnewValue\n]);\n},\n_attributeChangedImpl: function (name) {\nthis._setAttributeToProperty(this, name);\n},\nextend: function (target, source) {\nif (target && source) {\nvar n$ = Object.getOwnPropertyNames(source);\nfor (var i = 0, n; i < n$.length && (n = n$[i]); i++) {\nthis.copyOwnProperty(n, source, target);\n}\n}\nreturn target || source;\n},\nmixin: function (target, source) {\nfor (var i in source) {\ntarget[i] = source[i];\n}\nreturn target;\n},\ncopyOwnProperty: function (name, source, target) {\nvar pd = Object.getOwnPropertyDescriptor(source, name);\nif (pd) {\nObject.defineProperty(target, name, pd);\n}\n},\n_logger: function (level, args) {\nif (args.length === 1 && Array.isArray(args[0])) {\nargs = args[0];\n}\nswitch (level) {\ncase 'log':\ncase 'warn':\ncase 'error':\nconsole[level].apply(console, args);\nbreak;\n}\n},\n_log: function () {\nvar args = Array.prototype.slice.call(arguments, 0);\nthis._logger('log', args);\n},\n_warn: function () {\nvar args = Array.prototype.slice.call(arguments, 0);\nthis._logger('warn', args);\n},\n_error: function () {\nvar args = Array.prototype.slice.call(arguments, 0);\nthis._logger('error', args);\n},\n_logf: function () {\nreturn this._logPrefix.concat(this.is).concat(Array.prototype.slice.call(arguments, 0));\n}\n};\nPolymer.Base._logPrefix = function () {\nvar color = window.chrome && !/edge/i.test(navigator.userAgent) || /firefox/i.test(navigator.userAgent);\nreturn color ? [\n'%c[%s::%s]:',\n'font-weight: bold; background-color:#EEEE00;'\n] : ['[%s::%s]:'];\n}();\nPolymer.Base.chainObject = function (object, inherited) {\nif (object && inherited && object !== inherited) {\nif (!Object.__proto__) {\nobject = Polymer.Base.extend(Object.create(inherited), object);\n}\nobject.__proto__ = inherited;\n}\nreturn object;\n};\nPolymer.Base = Polymer.Base.chainObject(Polymer.Base, HTMLElement.prototype);\nif (window.CustomElements) {\nPolymer.instanceof = CustomElements.instanceof;\n} else {\nPolymer.instanceof = function (obj, ctor) {\nreturn obj instanceof ctor;\n};\n}\nPolymer.isInstance = function (obj) {\nreturn Boolean(obj && obj.__isPolymerInstance__);\n};\nPolymer.telemetry.instanceCount = 0;\n}());(function () {\nvar modules = {};\nvar lcModules = {};\nvar findModule = function (id) {\nreturn modules[id] || lcModules[id.toLowerCase()];\n};\nvar DomModule = function () {\nreturn document.createElement('dom-module');\n};\nDomModule.prototype = Object.create(HTMLElement.prototype);\nPolymer.Base.extend(DomModule.prototype, {\nconstructor: DomModule,\ncreatedCallback: function () {\nthis.register();\n},\nregister: function (id) {\nid = id || this.id || this.getAttribute('name') || this.getAttribute('is');\nif (id) {\nthis.id = id;\nmodules[id] = this;\nlcModules[id.toLowerCase()] = this;\n}\n},\nimport: function (id, selector) {\nif (id) {\nvar m = findModule(id);\nif (!m) {\nforceDomModulesUpgrade();\nm = findModule(id);\n}\nif (m && selector) {\nm = m.querySelector(selector);\n}\nreturn m;\n}\n}\n});\nvar cePolyfill = window.CustomElements && !CustomElements.useNative;\ndocument.registerElement('dom-module', DomModule);\nfunction forceDomModulesUpgrade() {\nif (cePolyfill) {\nvar script = document._currentScript || document.currentScript;\nvar doc = script && script.ownerDocument || document;\nvar modules = doc.querySelectorAll('dom-module');\nfor (var i = modules.length - 1, m; i >= 0 && (m = modules[i]); i--) {\nif (m.__upgraded__) {\nreturn;\n} else {\nCustomElements.upgrade(m);\n}\n}\n}\n}\n}());Polymer.Base._addFeature({\n_prepIs: function () {\nif (!this.is) {\nvar module = (document._currentScript || document.currentScript).parentNode;\nif (module.localName === 'dom-module') {\nvar id = module.id || module.getAttribute('name') || module.getAttribute('is');\nthis.is = id;\n}\n}\nif (this.is) {\nthis.is = this.is.toLowerCase();\n}\n}\n});Polymer.Base._addFeature({\nbehaviors: [],\n_desugarBehaviors: function () {\nif (this.behaviors.length) {\nthis.behaviors = this._desugarSomeBehaviors(this.behaviors);\n}\n},\n_desugarSomeBehaviors: function (behaviors) {\nvar behaviorSet = [];\nbehaviors = this._flattenBehaviorsList(behaviors);\nfor (var i = behaviors.length - 1; i >= 0; i--) {\nvar b = behaviors[i];\nif (behaviorSet.indexOf(b) === -1) {\nthis._mixinBehavior(b);\nbehaviorSet.unshift(b);\n}\n}\nreturn behaviorSet;\n},\n_flattenBehaviorsList: function (behaviors) {\nvar flat = [];\nfor (var i = 0; i < behaviors.length; i++) {\nvar b = behaviors[i];\nif (b instanceof Array) {\nflat = flat.concat(this._flattenBehaviorsList(b));\n} else if (b) {\nflat.push(b);\n} else {\nthis._warn(this._logf('_flattenBehaviorsList', 'behavior is null, check for missing or 404 import'));\n}\n}\nreturn flat;\n},\n_mixinBehavior: function (b) {\nvar n$ = Object.getOwnPropertyNames(b);\nfor (var i = 0, n; i < n$.length && (n = n$[i]); i++) {\nif (!Polymer.Base._behaviorProperties[n] && !this.hasOwnProperty(n)) {\nthis.copyOwnProperty(n, b, this);\n}\n}\n},\n_prepBehaviors: function () {\nthis._prepFlattenedBehaviors(this.behaviors);\n},\n_prepFlattenedBehaviors: function (behaviors) {\nfor (var i = 0, l = behaviors.length; i < l; i++) {\nthis._prepBehavior(behaviors[i]);\n}\nthis._prepBehavior(this);\n},\n_doBehavior: function (name, args) {\nfor (var i = 0; i < this.behaviors.length; i++) {\nthis._invokeBehavior(this.behaviors[i], name, args);\n}\nthis._invokeBehavior(this, name, args);\n},\n_doBehaviorOnly: function (name, args) {\nfor (var i = 0; i < this.behaviors.length; i++) {\nthis._invokeBehavior(this.behaviors[i], name, args);\n}\n},\n_invokeBehavior: function (b, name, args) {\nvar fn = b[name];\nif (fn) {\nfn.apply(this, args || Polymer.nar);\n}\n},\n_marshalBehaviors: function () {\nfor (var i = 0; i < this.behaviors.length; i++) {\nthis._marshalBehavior(this.behaviors[i]);\n}\nthis._marshalBehavior(this);\n}\n});\nPolymer.Base._behaviorProperties = {\nhostAttributes: true,\nbeforeRegister: true,\nregistered: true,\nproperties: true,\nobservers: true,\nlisteners: true,\ncreated: true,\nattached: true,\ndetached: true,\nattributeChanged: true,\nready: true\n};Polymer.Base._addFeature({\n_getExtendedPrototype: function (tag) {\nreturn this._getExtendedNativePrototype(tag);\n},\n_nativePrototypes: {},\n_getExtendedNativePrototype: function (tag) {\nvar p = this._nativePrototypes[tag];\nif (!p) {\nvar np = this.getNativePrototype(tag);\np = this.extend(Object.create(np), Polymer.Base);\nthis._nativePrototypes[tag] = p;\n}\nreturn p;\n},\ngetNativePrototype: function (tag) {\nreturn Object.getPrototypeOf(document.createElement(tag));\n}\n});Polymer.Base._addFeature({\n_prepConstructor: function () {\nthis._factoryArgs = this.extends ? [\nthis.extends,\nthis.is\n] : [this.is];\nvar ctor = function () {\nreturn this._factory(arguments);\n};\nif (this.hasOwnProperty('extends')) {\nctor.extends = this.extends;\n}\nObject.defineProperty(this, 'constructor', {\nvalue: ctor,\nwritable: true,\nconfigurable: true\n});\nctor.prototype = this;\n},\n_factory: function (args) {\nvar elt = document.createElement.apply(document, this._factoryArgs);\nif (this.factoryImpl) {\nthis.factoryImpl.apply(elt, args);\n}\nreturn elt;\n}\n});Polymer.nob = Object.create(null);\nPolymer.Base._addFeature({\nproperties: {},\ngetPropertyInfo: function (property) {\nvar info = this._getPropertyInfo(property, this.properties);\nif (!info) {\nfor (var i = 0; i < this.behaviors.length; i++) {\ninfo = this._getPropertyInfo(property, this.behaviors[i].properties);\nif (info) {\nreturn info;\n}\n}\n}\nreturn info || Polymer.nob;\n},\n_getPropertyInfo: function (property, properties) {\nvar p = properties && properties[property];\nif (typeof p === 'function') {\np = properties[property] = { type: p };\n}\nif (p) {\np.defined = true;\n}\nreturn p;\n},\n_prepPropertyInfo: function () {\nthis._propertyInfo = {};\nfor (var i = 0; i < this.behaviors.length; i++) {\nthis._addPropertyInfo(this._propertyInfo, this.behaviors[i].properties);\n}\nthis._addPropertyInfo(this._propertyInfo, this.properties);\nthis._addPropertyInfo(this._propertyInfo, this._propertyEffects);\n},\n_addPropertyInfo: function (target, source) {\nif (source) {\nvar t, s;\nfor (var i in source) {\nt = target[i];\ns = source[i];\nif (i[0] === '_' && !s.readOnly) {\ncontinue;\n}\nif (!target[i]) {\ntarget[i] = {\ntype: typeof s === 'function' ? s : s.type,\nreadOnly: s.readOnly,\nattribute: Polymer.CaseMap.camelToDashCase(i)\n};\n} else {\nif (!t.type) {\nt.type = s.type;\n}\nif (!t.readOnly) {\nt.readOnly = s.readOnly;\n}\n}\n}\n}\n}\n});Polymer.CaseMap = {\n_caseMap: {},\n_rx: {\ndashToCamel: /-[a-z]/g,\ncamelToDash: /([A-Z])/g\n},\ndashToCamelCase: function (dash) {\nreturn this._caseMap[dash] || (this._caseMap[dash] = dash.indexOf('-') < 0 ? dash : dash.replace(this._rx.dashToCamel, function (m) {\nreturn m[1].toUpperCase();\n}));\n},\ncamelToDashCase: function (camel) {\nreturn this._caseMap[camel] || (this._caseMap[camel] = camel.replace(this._rx.camelToDash, '-$1').toLowerCase());\n}\n};Polymer.Base._addFeature({\n_addHostAttributes: function (attributes) {\nif (!this._aggregatedAttributes) {\nthis._aggregatedAttributes = {};\n}\nif (attributes) {\nthis.mixin(this._aggregatedAttributes, attributes);\n}\n},\n_marshalHostAttributes: function () {\nif (this._aggregatedAttributes) {\nthis._applyAttributes(this, this._aggregatedAttributes);\n}\n},\n_applyAttributes: function (node, attr$) {\nfor (var n in attr$) {\nif (!this.hasAttribute(n) && n !== 'class') {\nvar v = attr$[n];\nthis.serializeValueToAttribute(v, n, this);\n}\n}\n},\n_marshalAttributes: function () {\nthis._takeAttributesToModel(this);\n},\n_takeAttributesToModel: function (model) {\nif (this.hasAttributes()) {\nfor (var i in this._propertyInfo) {\nvar info = this._propertyInfo[i];\nif (this.hasAttribute(info.attribute)) {\nthis._setAttributeToProperty(model, info.attribute, i, info);\n}\n}\n}\n},\n_setAttributeToProperty: function (model, attribute, property, info) {\nif (!this._serializing) {\nproperty = property || Polymer.CaseMap.dashToCamelCase(attribute);\ninfo = info || this._propertyInfo && this._propertyInfo[property];\nif (info && !info.readOnly) {\nvar v = this.getAttribute(attribute);\nmodel[property] = this.deserialize(v, info.type);\n}\n}\n},\n_serializing: false,\nreflectPropertyToAttribute: function (property, attribute, value) {\nthis._serializing = true;\nvalue = value === undefined ? this[property] : value;\nthis.serializeValueToAttribute(value, attribute || Polymer.CaseMap.camelToDashCase(property));\nthis._serializing = false;\n},\nserializeValueToAttribute: function (value, attribute, node) {\nvar str = this.serialize(value);\nnode = node || this;\nif (str === undefined) {\nnode.removeAttribute(attribute);\n} else {\nnode.setAttribute(attribute, str);\n}\n},\ndeserialize: function (value, type) {\nswitch (type) {\ncase Number:\nvalue = Number(value);\nbreak;\ncase Boolean:\nvalue = value != null;\nbreak;\ncase Object:\ntry {\nvalue = JSON.parse(value);\n} catch (x) {\n}\nbreak;\ncase Array:\ntry {\nvalue = JSON.parse(value);\n} catch (x) {\nvalue = null;\nconsole.warn('Polymer::Attributes: couldn`t decode Array as JSON');\n}\nbreak;\ncase Date:\nvalue = new Date(value);\nbreak;\ncase String:\ndefault:\nbreak;\n}\nreturn value;\n},\nserialize: function (value) {\nswitch (typeof value) {\ncase 'boolean':\nreturn value ? '' : undefined;\ncase 'object':\nif (value instanceof Date) {\nreturn value.toString();\n} else if (value) {\ntry {\nreturn JSON.stringify(value);\n} catch (x) {\nreturn '';\n}\n}\ndefault:\nreturn value != null ? value : undefined;\n}\n}\n});Polymer.version = \"1.6.1\";Polymer.Base._addFeature({\n_registerFeatures: function () {\nthis._prepIs();\nthis._prepBehaviors();\nthis._prepConstructor();\nthis._prepPropertyInfo();\n},\n_prepBehavior: function (b) {\nthis._addHostAttributes(b.hostAttributes);\n},\n_marshalBehavior: function (b) {\n},\n_initFeatures: function () {\nthis._marshalHostAttributes();\nthis._marshalBehaviors();\n}\n});</script>\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"file":"polymer/polymer-micro.html","sourceRoot":"/source/"}